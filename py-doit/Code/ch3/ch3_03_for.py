# ch3_03_for.py
#
print("for 문은 어떻게 사용?")
# 반복해서 문장을 수행해야 할 경우 for문을 사용한다. 

############################
print("for문의 기본 구조")
'''
for 변수 in 리스트(또는 튜플, 문자열):
    수행할 문장1
    수행할 문장2
    ...
'''

#
############################
print("예제를 통해 for문 이해하기")
############################
#
# 1. 전형적인 for문
#
test_list = ['one', 'two', 'three'] 
for i in test_list:
    print(i)


#
# 2. 다양한 for문의 사용
#
a = [(1,2), (3,4), (5,6)]

for (first, last) in a:
    print(first + last)


#
# 3. for문의 응용
#
# "총 5명의 학생이 시험을 보았는데 시험 점수가 60점이 넘으면 
# 합격이고 그렇지 않으면 불합격이다. 
# 합격인지 불합격인지 결과를 보여 주시오."
#
# marks1.py
#
marks = [90, 25, 67, 45, 80]

number = 0 
for mark in marks: 
    number = number +1 
    if mark >= 60: 
        print("%d번 학생은 합격입니다." % number)
    else: 
        print("%d번 학생은 불합격입니다." % number)
    

###################################
# cmd에서 실행하시오.
# python marks1.py
###################################


#
###################################
print("for문과 continue")
###################################
# for문 안의 문장을 수행하는 도중에 continue문을 만나면 
# for문의 처음으로 돌아가게 된다.
#
# 앞에서 for문 응용 예제를 그대로 사용해서 60점 이상인 사람에게는 
# 축하 메시지를 보내고 나머지 사람에게는 아무 메시지도 전하지 않는 
# 프로그램을 작성.
#
# marks2.py 
marks = [90, 25, 67, 45, 80]

number = 0 
for mark in marks: 
    number = number +1 
    if mark < 60:
        continue 
    print("%d번 학생 축하합니다. 합격입니다. " % number)



###################################
# cmd에서 실행하시오.
# python marks2.py
###################################

#
###################################
print("for문과 함께 자주 사용하는 range 함수")
# range(number)
# range(시작 숫자, 끝 숫자)
###################################
#
a = range(10)
a
list(a)

a = range(1, 11)
a
#
# range 함수를 이용한 코드
#
add = 0 
for i in range(1, 11): 
    add = add + i

print(add)

#marks3.py
marks = [90, 25, 67, 45, 80]
for number in range(len(marks)):
    if marks[number] < 60: 
        continue
    print("%d번 학생 축하합니다. 합격입니다." % (number+1))


###################################
# cmd에서 실행하시오.
# python marks3.py
###################################

#
###################################
print("for와 range를 이용한 구구단")
# for와 range 함수를 사용하면 
# 소스 코드 단 4줄만으로 구구단을 출력
###################################
#
# 중첩 for 문
for i in range(2,10):         # ①번 for문 (i-loop)
     for j in range(1, 10):   # ②번 for문 (j-loop)
         print(i*j, end=" ") 
     print('')   # 줄 바꿈


# 아래와 같이 출력하도록 코들르 변경해보시오.
#############################################################
# 2 X 1 = 2 2 X 2 = 4 2 X 3 = 6 2 X 4 = 8 2 X 5 = 10 2 X 6 = 12 2 X 7 = 14 2 X 8 = 16 2 X 9 = 18
# 3 X 1 = 3 3 X 2 = 6 3 X 3 = 9 3 X 4 = 12 3 X 5 = 15 3 X 6 = 18 3 X 7 = 21 3 X 8 = 24 3 X 9 = 27
# 4 X 1 = 4 4 X 2 = 8 4 X 3 = 12 4 X 4 = 16 4 X 5 = 20 4 X 6 = 24 4 X 7 = 28 4 X 8 = 32 4 X 9 = 36
# 5 X 1 = 5 5 X 2 = 10 5 X 3 = 15 5 X 4 = 20 5 X 5 = 25 5 X 6 = 30 5 X 7 = 35 5 X 8 = 40 5 X 9 = 45
# 6 X 1 = 6 6 X 2 = 12 6 X 3 = 18 6 X 4 = 24 6 X 5 = 30 6 X 6 = 36 6 X 7 = 42 6 X 8 = 48 6 X 9 = 54
# 7 X 1 = 7 7 X 2 = 14 7 X 3 = 21 7 X 4 = 28 7 X 5 = 35 7 X 6 = 42 7 X 7 = 49 7 X 8 = 56 7 X 9 = 63
# 8 X 1 = 8 8 X 2 = 16 8 X 3 = 24 8 X 4 = 32 8 X 5 = 40 8 X 6 = 48 8 X 7 = 56 8 X 8 = 64 8 X 9 = 72
# 9 X 1 = 9 9 X 2 = 18 9 X 3 = 27 9 X 4 = 36 9 X 5 = 45 9 X 6 = 54 9 X 7 = 63 9 X 8 = 72 9 X 9 = 81
#############################################################
# 
for i in range(2,10):        # ①번 for문
     for j in range(1, 10):   # ②번 for문
         print(i, "X", j, "=", i*j, end="  ") 
     print('') 


#
#######################################
print("리스트 내포(List comprehension)")
#######################################
#

a = [1,2,3,4]
result = []
for num in a:
    result.append(num*3)


print(result)
# 리쓰트 냬포
a = [1,2,3,4]
result = [num*3 for num in a]
print(result)

#
#############################################
print("리스트 내포의 일반 문법")
#
# [표현식 for 항목 in 반복가능객체 if 조건문]
# -----------------------------------------
#
# 일반화
# [표현식 for 항목1 in 반복가능객체1 if 조건문1
#         for 항목2 in 반복가능객체2 if 조건문2
#         ...
#         for 항목n in 반복가능객체n if 조건문n]
##############################################
#
# 예1. 구구단의 모든 결과를 리스트에 담는 코드
#
result = [x*y for x in range(2,10) for y in range(1,10)]

#
# 예2. 9 이하의 정수 중 짝수는 2배로, 홀수는 그대로 리스트에 담는 코드
#
x = [1, 2, 3, 4, 5, 6, 7, 8, 9]  # -> [1, 4, 3, 8, 5, 12, 7, 16, 9]
result = []
for idx in range(len(x)):
    if x[idx] % 2 == 0:
        result.append(x[idx] * 2)
    else:
        result.append(x[idx])
result
#
# 짝수만 추출하여 2배로 만든 리스트 구성
[element * 2 for element in x if element % 2 == 0]
# 그러면 짝수는 2배로, 홀수는 그대로 리스트에 담는 코드는?
[(element * 2 if element % 2 == 0 else element) for element in x]

####################################

"""
Author: redwoods
파이썬 코드: ch3_03_for.py
"""
